{
  "topStories": [
    {
      "id": 1,
      "title": "AI breakthroughs reshape developer tooling in 2025",
      "summary": "From copilots to agents, here’s what’s landing in your IDE next.",
      "url": "/article/1",
      "image_url": "https://images.unsplash.com/photo-1518779578993-ec3579fee39f?q=80&w=1600&auto=format&fit=crop",
      "published_at": "2h ago",
      "content": "AI-powered developer tools are evolving rapidly in 2025, with copilots becoming agents capable of autonomous code generation, refactoring, and debugging. IDEs are integrating LLMs to streamline workflows and reduce cognitive load."
    }
  ],
  "stories": [
    {
      "id": 2,
      "title": "Edge runtimes speed up SSR by 35%",
      "summary": "Benchmarks show major wins on cold starts and streaming.",
      "url": "/article/2",
      "image_url": "https://images.unsplash.com/photo-1488590528505-98d2b5aba04b?q=80&w=800&auto=format&fit=crop",
      "published_at": "Today",
      "content": "Recent benchmarks reveal that edge runtimes significantly reduce cold start latency and improve streaming performance for server-side rendering. Frameworks like Next.js and SvelteKit are leveraging these gains in production."
    },
    {
      "id": 3,
      "title": "Database caching patterns you should know",
      "summary": "From write-through to cache-aside, when to use each.",
      "url": "/article/3",
      "image_url": "https://images.unsplash.com/photo-1558494949-ef010cbdcc31?q=80&w=800&auto=format&fit=crop",
      "published_at": "Today",
      "content": "Caching strategies like write-through, write-behind, and cache-aside offer trade-offs in consistency, latency, and complexity. Choosing the right pattern depends on your workload, data volatility, and read/write balance."
    },
    {
      "id": 4,
      "title": "React Server Components: what’s real in production",
      "summary": "Hard-earned lessons from teams that shipped RSC.",
      "url": "/article/4",
      "image_url": "https://images.unsplash.com/photo-1555066931-4365d14bab8c?q=80&w=800&auto=format&fit=crop",
      "published_at": "Yesterday",
      "content": "Teams adopting React Server Components report improved performance and bundle size reduction, but also face challenges in debugging, hydration mismatches, and architectural complexity. Best practices are still emerging."
    }
  ]
}